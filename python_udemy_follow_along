# Numbers: Simple Arithmetic
# Write an expression that equals 100. 
# For example 50+50   or 110-10 . 
# See if you can use more than one arithmetic operator! Write only one expression and submit only one line of code.
# If your expression results in 100, then you should see a success message after you test out your solution :)

# print(99 + 1 )   

# my_dogs = 2

# a = 10
# print(type(a))
# my_income = 100
# tax_rate = 0.1
# my_taxes = my_income * tax_rate

# print(my_taxes)

# print('hello \nworld')

# print('hello\tworld')
# print(len('hello'))


# mystring = 'hello world'

# print(mystring[3])
# print(mystring[-3])
# print(mystring[2:])

# print(mystring[::2])
# print(mystring[::-1])

# String Slicing
# Use string slicing to grab the word 'ink'  from inside 'tinker' 
# For example, 'education'[3:6]  returns 'cat' 
# Remember that when slicing you only go up to but not including the end index.
# You should only write one line of code for this. Do not assign a variable name to the string.

# "tinker"[1:4]

# letter = 'z' 
# print(letter * 10)

# x = 'hi this is a string'

# print(x.split('i'))

# # x.upper()
# print(x)

# print('this is a string {}'.format('inserted'))

# print('the {2} {1} {0}'.format('fox', 'brown', 'quick'))

# print('the {q} {b} {f}'.format(f ='fox', b ='brown', q='quick'))

# result = 100 / 777
# ##r is the location of the variable
# ## 1 is the amount of spaces and numbers to the left 
# ## 3 is the number of spaces and numbers to the right
# print('the result was {r:1.3f}'.format(r = result))


# name = 'jose'

# print(f'hello, his name is {name}')

# name = 'sam'
# age = 3

# print(f"{name} is {age} years old.")

# my_list =[1,2,3]

# my_list3 = ['string', 100, 23.2]

# print(my_list)

# print(my_list[0])
# print(my_list + my_list3)


# new_list = my_list3 + my_list

# new_list[0] = 'Divante'
# print(new_list)

# new_list.append('seven')

# print(new_list)

# popped_item = new_list.pop()

# print(popped_item)

# index_poped_item = new_list.pop(2)

# print(index_poped_item)

# new_list = ['a', 'e', 'x', 'b', 'c']
# num_list = [4,1,8,3]

# new_list.sort()
# print(new_list)

# new_list.reverse()
# print(new_list)

# my_dict = {'key1': 'value1', 'key2': 'value2'}
# print(my_dict['key1'])

# prices_lookup = {'apple': 2.99, 'oranges': 1.99, 'milk': 5.80}

# print(prices_lookup['apple'])

# d = {'k1':123, 'k2':[0,1,2], 'k3': {'insideKey':100}}

# print(d['k2'][2])

# print(d['k3']['insideKey'])

# d = {'key1':['a','b','c']}

# mylist = d['key1']
# print(mylist)
# letter = mylist[2]
# print(letter)
# letter.upper()
# print(letter.upper())
# print(d['key1'][2].upper())

# d = {'k1': 100, 'k2': 200}

# d['k3'] = 300

# print(d)

# d['k1'] = 'new value'
# print(d)

# d = {'k1': 100, 'k2': 200, 'k3': 300}

# print(d.keys())

# print(d.values())

# print(d.items())

# t = (1,2,3)
# mylist = [1,2,3]

# print(len(t))

# print(t[-1])

# t =('a','b','c','a')

# print(t.count('a'))
# print(t.index('a'))

# print(t.index('b'))

# mylist[0] = 'new'

# t[0] = 'new'

#tuples are for passing around objects and making sure they don't change

# myset = set()
# print(myset)

# myset.add(1)

# print(myset)

# myset.add(2)

# print(myset)
# myset.add(2)
# print(myset)
# mylist = [1,1,1,1,1,2,2,2,2,2,23,3,3,3,3]
# print(set(mylist))

# True
# False

# type(False)
# print(1>2)
# print(1 == 1)

# b = None
# print(type(b))

# myfile = open('python-practice-text.txt')

# # myfile = open('whops_wrong_file')
# print(myfile.read())

# print(myfile.read())
# myfile.seek(0)

# contents = myfile.read()
# print(contents)
# myfile.seek(0)

# print(myfile.readlines())
# ##opens the file as a variable
# with open('python-practice-text.txt') as my_new_file:
#     contents = my_new_file.read()
#     print(contents)
 
# # with open('python-practice-text.txt', mode='r') as myfile:
# #     contents = myfile.read()

# #     print(contents)

# # with open('python-practice-text.txt', mode ='r') as f:
# #     print(f.read())

# # with open('python-practice-text.txt', mode='a') as f:
# #     f.write('\nFOUR ON FOURTH')

# # with open('python-practice-text.txt', mode='r') as myfile:
# #     myfile.seek(0)
    
    
# #     print(myfile.read())

# with open('my_new_file_from_python', mode= 'w') as f:
#     f.write('I created this file from python')

# with open('my_new_file_from_python', mode= 'r') as f:
#     print(f.read())

# f.close()
# my_new_file.close()


